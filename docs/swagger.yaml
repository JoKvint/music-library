basePath: /
definitions:
  handlers.AddSongRequest:
    properties:
      group:
        type: string
      song:
        type: string
    required:
    - group
    - song
    type: object
  models.Song:
    properties:
      created_at:
        example: 2024-10-02T15:04:05Z07:00
        type: string
      deleted_at:
        example: 2024-10-02T15:04:05Z07:00
        type: string
      group:
        example: Muse
        type: string
      id:
        example: 1
        type: integer
      link:
        example: https://www.youtube.com/watch?v=Xsp3_a-PMTw
        type: string
      release_date:
        example: 16.07.2006
        type: string
      text:
        example: Ooh baby, don't you know I suffer?
        type: string
      title:
        example: Supermassive Black Hole
        type: string
      updated_at:
        example: 2024-10-02T15:04:05Z07:00
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: This is a simple music library API.
  title: Music Library API
  version: "1.0"
paths:
  /songs:
    get:
      consumes:
      - application/json
      parameters:
      - description: Group
        in: query
        name: group
        type: string
      - description: Song
        in: query
        name: song
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Song'
            type: array
      summary: Get list of songs
      tags:
      - songs
    post:
      consumes:
      - application/json
      parameters:
      - description: Add Song
        in: body
        name: song
        required: true
        schema:
          $ref: '#/definitions/handlers.AddSongRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Song'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Add a new song
      tags:
      - songs
  /songs/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Song ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete a song
      tags:
      - songs
    get:
      consumes:
      - application/json
      parameters:
      - description: Song ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Song'
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get song by ID
      tags:
      - songs
    put:
      consumes:
      - application/json
      parameters:
      - description: Song ID
        in: path
        name: id
        required: true
        type: integer
      - description: Update Song
        in: body
        name: song
        required: true
        schema:
          $ref: '#/definitions/models.Song'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Song'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update a song
      tags:
      - songs
swagger: "2.0"
